import Mathlib.CategoryTheory.Limits.Shapes.Pullback.CommSq

-- An api for chosen pullbacks?????
namespace CategoryTheory
open Category

universe u v

variable (Œ± : Type u) [Category.{v} Œ±]
/-
def Homs := Œ£ X : Œ±, Œ£ Y : Œ±, X ‚ü∂ Y

variable (f : Homs Œ±)
def Homs.source : Œ± := f.fst

def Homs.target : Œ± := f.snd.fst

def Homs.hom : f.fst ‚ü∂ f.snd.fst := f.snd.snd

variable {Œ±} in
def Homs.mk {X Y : Œ±} (f : X ‚ü∂ Y) : Homs Œ± := ‚ü®X, ‚ü®Y, f‚ü©‚ü©
-/

structure CanonicalPullback (S : Set Œ±) where
  target : S ‚Üí Œ±
  hom (X : S) : X.val ‚ü∂ target X
  pullback (X : S) {Y : Œ±} (f : Y ‚ü∂ target X) : Œ±
  pullback_fst (X : S) {Y : Œ±} (f : Y ‚ü∂ target X) : pullback X f ‚ü∂ X
  pullback_snd (X : S) {Y : Œ±} (f : Y ‚ü∂ target X) : pullback X f ‚ü∂ Y
  isPullback (X : S) {Y : Œ±} (f : Y ‚ü∂ target X) :
    IsPullback (pullback_fst X f) (pullback_snd X f) (hom X) f

/- not needed
  pullback_in (X : S) {Y : Œ±} (f : Y ‚ü∂ target X) : pullback X f ‚àà S
  pullback_snd_heq (X : S) {Y : Œ±} (f : Y ‚ü∂ target X) : HEq (pullback_snd X f) (hom ‚ü®_, pullback_in X f‚ü©)

--def CanonicalPullback.pullback_snd' (P : CanonicalPullback S) (p : S) {Y : Œ±} (f : Y ‚ü∂ p.val.target) : S :=
--  ‚ü®Homs.mk (P.pullback_snd p f), P.pullback_snd_in _ _‚ü©

structure FunctorialCanonicalPullback extends CanonicalPullback Œ± S where
  id_pullback {X : S} : X = pullback p (ùüô _)
  id_pullback_fst {X : S} : eqToHom id_pullback ‚â´ pullback_fst X (ùüô _) = ùüô _
  comp_pullback {X : S} {Y Z : Œ±} {f : Y ‚ü∂ target X} {g : Z ‚ü∂ Y} :
    pullback X (g ‚â´ f) = pullback () g
  comp_pullback_fst {p : S} {Y Z : Œ±} (f : Y ‚ü∂ p.val.target) (g : Z ‚ü∂ Y) :
    pullback_fst p (g ‚â´ f) = eqToHom comp_pullback ‚â´ pullback_fst (toCanonicalPullback.pullback_snd' S p f) g ‚â´
      pullback_fst p f
-/
end CategoryTheory

/-
namespace ContextualCategory
variable (Œ± : Type*) [ContextualCategory Œ±]

def Pullbacks : CanonicalPullback Œ± (PreContextualCategory.nr Œ±) where
  target X := ft X.val
  hom X := proj X.val
  pullback _ _ f := pb f
  pullback_fst _ _ f := pb_fst f
  pullback_snd _ _ f := pb_snd f
  isPullback _ _ f := isPullback f

end ContextualCategory
-/
